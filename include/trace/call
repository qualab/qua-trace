// Public header: <trace/call>
// call trace and call stack overview instruments
// header includes:
// * trace::call to store single traced call
// * trace::call::stack to handle traced calls as a call stack
// * trace::call::warden returned from trace::call::stack::push() for auto-pop
// * trace::call::stack::iterator to access traced calls in call::stack

#pragma once

#include <trace/scope>
#include <cstdint>
#include <string>

QUA_TRACE_BEGIN

// Public class: trace::call
// call storage to trace in call stack
// use __func__, __FILE__, __LINE__
// to specify origination point at first line of function

class QUA_TRACE_PUBLIC call : public scope
{
public:
    call(const std::string&  name,
         const std::string&  file,
               std::uint64_t line);

    const std::string&  get_file() const;
          std::uint64_t get_line() const;

private:
    std::string   m_file;
    std::uint64_t m_line;
};

#define QUA_TRACE_CALL QUA_TRACE::call(__func__, __FILE__, __LINE__)

QUA_TRACE_END

// Unicode signature: Владимир Керимов
